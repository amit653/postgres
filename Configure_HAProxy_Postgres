-----Configure HAProxy Loadbalancer for postgres instances running in UTM virtual box------
Reference : https://www.haproxy.com/documentation/haproxy-configuration-manual/2-7r1/#8.3.4
https://www.highgo.ca/2023/06/06/using-nginx-as-a-postgresql-reverse-proxy-and-load-balancer/
https://www.alibabacloud.com/blog/postgresql-haproxy-proxy-for-ha-and-load-balance_597618

Primary port running at 5432   -- VB
replica port running 5433 and 5435  --VB
-- UTM console
https://github.com/utmapp/UTM/issues/3802   --- changed   "shared network" to "emulated VLAN" and added port forwarding 
add port fwding in UTM console--> tcp guest ip address 10.0.2.15 guest-port:22, localhost addrs-127.0.0.1, localhost-port 1234

--from local machine
lsof -i:1234
COMMAND     PID  USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME
ssh       15202 amitg    3u  IPv4 0x4f2f47558bd792f9      0t0  TCP localhost:58305->localhost:search-agent (ESTABLISHED)
ssh -p 1234 student@1270.0.1

-- connected to VB and install haproxy2.7 on Ubuntu 22
student@sudo apt update
 sudo apt show haproxy
sudo add-apt-repository ppa:vbernat/haproxy-2.7 -y
sudo apt update
sudo apt install haproxy=2.7.\* -y
sudo systemctl status haproxy ;haproxy -v

--- COnfigure HA
 sudo cat /etc/haproxy/haproxy.cfg
global
    maxconn 5  >>> total connection 5 including HAproxy console
 
defaults
    log global
    mode tcp
    retries 2
    timeout client 30m
    timeout connect 4s
    timeout server 30m
    timeout check 5s
 
listen stats
    mode http
    bind *:7000        ####localhost:7000 HA proxy stats console
    stats enable
    stats uri /
 
listen pgReadWrite
    bind *:5000             #### Loadbalancing port , client pg connections will be redirected to 5432/5433/5435
    option pgsql-check user postgres
    default-server inter 3s fall 3
    balance roundrobin 
    server pg1 localhost:5432 check port 5432
    server pg2 localhost:5433 check port 5433
    server pg3 localhost:5435 check port 5435

-- validate and restart haproxy service after above changes
haproxy -f /etc/haproxy/haproxy.cfg -c
student$ sudo systemctl stop haproxy; sudo systemctl start haproxy   
student:/$ psql -U postgres -h 127.0.0.1 -p 5000
Password for user postgres: 
psql (15.3 (Ubuntu 15.3-1.pgdg22.04+1))
SSL connection (protocol: TLSv1.3, cipher: TLS_AES_256_GCM_SHA384, compression: off)
Type "help" for help.
postgres=# show port;
 port 
------
 5432
(1 row)

postgres=# \q
student:/$ psql -U postgres -h 127.0.0.1 -p 5000
Password for user postgres: 
psql (15.3 (Ubuntu 15.3-1.pgdg22.04+1))
Type "help" for help.

postgres=# show port;
 port 
------
 5435
(1 row)

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

###Now testing psql as client from local machine , need to create ssh tunnel for 7000 and 5000 
Refer: https://serverfault.com/questions/1004529/access-an-http-server-as-localhost-from-an-external-pc-over-ssh

###Create tunnel for guest port 7000 mapped to local port 7001
amitg@MacBook-Pro postgrespro-UTM % ssh -L 7001:127.0.0.1:7000 -p 1234 student@127.0.0.1
student@127.0.0.1's password: 
student:~$  >>>>>>>>>tunnel termial should be open 
-- Test from local browser or terminal
amitg@MacBook-Pro scripts %  curl http://localhost:7001
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"

###Create tunnel for postgres port 5000 mapped to local port 5001
ssh -L local_port:remote_address:remote_port username@remote_server.com
amitg@MacBook-Pro scripts % ssh -L 5001:127.0.0.1:5000 -p 1234 student@127.0.0.1
student@127.0.0.1's password: 
Last login: Fri May  3 12:12:24 2024 from 10.0.2.2
student:~$  >>>>>>>>>> >>>>>>>>>tunnel termial should be open 
--- Verify postgres client load balance connection from local machine
amitg@MacBook-Pro scripts %  psql -U postgres -h localhost -p 5001
psql (15.3)
Type "help" for help.

postgres=# show port;
 port 
------
 5435 >>>>>>>>> slave
(1 row)

postgres=# \q
amitg@MacBook-Pro scripts %  psql -U postgres -h localhost -p 5001
psql (15.3)
SSL connection (protocol: TLSv1.3, cipher: TLS_AES_256_GCM_SHA384, compression: off)
Type "help" for help.

postgres=# show port;
 port 
------
 5432 >>>>> primary
(1 row)

postgres=# \q
amitg@MacBook-Pro scripts %  psql -U postgres -h localhost -p 5001
psql (15.3)
SSL connection (protocol: TLSv1.3, cipher: TLS_AES_256_GCM_SHA384, compression: off)
Type "help" for help.

postgres=# show port;
 port 
------
 5433  >>>>. slave
(1 row)

---- Listening ports
amitg@MacBook-Pro  % lsof -i:5000
COMMAND   PID  USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME
ControlCe 936 amitg   10u  IPv4 0x4f2f47558de452f9      0t0  TCP *:commplex-main (LISTEN)
ControlCe 936 amitg   11u  IPv6 0x4f2f47558e806c29      0t0  TCP *:commplex-main (LISTEN)
amitg@MacBook-Pro % lsof -i:7000
COMMAND   PID  USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME
ControlCe 936 amitg    8u  IPv4 0x4f2f47558de44779      0t0  TCP *:afs3-fileserver (LISTEN)
ControlCe 936 amitg    9u  IPv6 0x4f2f47558e806429      0t0  TCP *:afs3-fileserver (LISTEN)
amitg@MacBook-Pro % lsof -i:7001
COMMAND   PID  USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME
ssh     15202 amitg    5u  IPv6 0x4f2f47558e80a429      0t0  TCP localhost:afs3-callback (LISTEN)
ssh     15202 amitg    6u  IPv4 0x4f2f475589b380f9      0t0  TCP localhost:afs3-callback (LISTEN)
amitg@MacBook-Pro % lsof -i:5001
COMMAND   PID  USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME
ssh     15900 amitg    5u  IPv6 0x4f2f47558e80bc29      0t0  TCP localhost:commplex-link (LISTEN)
ssh     15900 amitg    6u  IPv4 0x4f2f47558bd79e79      0t0  TCP localhost:commplex-link (LISTEN)
ssh     15900 amitg   10u  IPv6 0x4f2f47558047ec29      0t0  TCP localhost:commplex-link->localhost:58562 (FIN_WAIT_2)
psql    15908 amitg    5u  IPv6 0x4f2f47558a509c29      0t0  TCP localhost:58562->localhost:commplex-link (CLOSE_WAIT)






